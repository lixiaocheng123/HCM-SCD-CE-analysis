model {

  # multinomial distribution
  # Dirichlet prior for lambda

  r.0[1, 1:n_S] ~ dmulti(lambda.0[1, 1:n_S], n.0[1])
  r.1[1, 1:n_S] ~ dmulti(lambda.1[1, 1:n_S], n.1[1])

  r.0[4, 1:n_S] ~ dmulti(lambda.0[4, 1:n_S], n.0[4])
  r.1[4, 1:n_S] ~ dmulti(lambda.1[4, 1:n_S], n.1[4])

  lambda.0[1, 1:n_S] ~ ddirch(alpha.0[1:n_S])
  lambda.1[1, 1:n_S] ~ ddirch(alpha.1[1:n_S])

  lambda.0[4, 1:n_S] ~ ddirch(alpha.0[1:n_S])
  lambda.1[4, 1:n_S] ~ ddirch(alpha.1[1:n_S])

  # deterministic values for absorbent states

  for (i in 1:3) {
    for (j in 4:6) {
      lambda.0[i, j] <- 0
      lambda.1[i, j] <- 0

      lambda.0[j, i] <- 0
      lambda.1[j, i] <- 0
  }

  for (i in 1:2) {

    j <- 3*(i - 1)

    lambda.0[2 + j, 1 + j] <- 0
    lambda.0[2 + j, 3 + j] <- 0
    lambda.0[3 + j, 1 + j] <- 0
    lambda.0[3 + j, 2 + j] <- 0

    lambda.1[2 + j, 1 + j] <- 0
    lambda.1[2 + j, 3 + j] <- 0
    lambda.1[3 + j, 1 + j] <- 0
    lambda.1[3 + j, 2 + j] <- 0

    lambda.0[2 + j, 2 + j] <- 1
    lambda.1[2 + j, 2 + j] <- 1
    lambda.0[3 + j, 3 + j] <- 1
    lambda.1[3 + j, 3 + j] <- 1
  }
}


